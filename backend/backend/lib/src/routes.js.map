{"version":3,"sources":["../../../src/routes.js"],"names":["apiAuthlessRoutes","map","route","app","apiSuffix","routes","post","req","res","next","authenticate","err","user","info","status","json","message","errorCode","login","stripSensitiveDataForResponse","get","session","destroy","console","log","clearCookie"],"mappings":";;;;;;;AAAA;;;;AACA;;AACA;;;;AACO,IAAMA,gDAAoB,CAC7B,WAD6B,EAE7B,QAF6B,EAG/BC,GAH+B,CAG3B,UAACC,KAAD;AAAA,gBAAc,sBAAWC,GAAX,CAAeC,SAA7B,GAAyCF,KAAzC;AAAA,CAH2B,CAA1B;AAIA,IAAMG,0BAAS;AAClB,iBAAa;AACTC,cAAM,cAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtB,+BAASC,YAAT,CAAsB,SAAtB,EAAiC,UAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AAClD,oBAAIF,GAAJ,EAAS;AACLF,yBAAKE,GAAL;AACA;AACH;AACD,oBAAI,CAACC,IAAL,EAAW;AACPJ,wBAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASH,KAAKG,OAAhB,EAAyBC,WAAWJ,KAAKI,SAAzC,EAArB;AACA;AACH;AACDV,oBAAIW,KAAJ,CAAUN,IAAV,EAAgB,UAACD,GAAD,EAAS;AACrB,wBAAIA,GAAJ,EAAS;AACLF,6BAAKE,GAAL;AACA;AACH;AACDH,wBAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAAUI,6BAAV,CAAwCP,IAAxC,CAArB;AACA;AACH,iBAPD;AAQH,aAjBD,EAiBGL,GAjBH,EAiBQC,GAjBR,EAiBaC,IAjBb;AAkBH;AApBQ,KADK;AAuBlB,cAAU;AACNH,cAAM,cAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtB,+BAASC,YAAT,CAAsB,OAAtB,EAA+B,UAACC,GAAD,EAAMC,IAAN,EAAYC,IAAZ,EAAqB;AAChD,oBAAIF,GAAJ,EAAS;AACLF,yBAAKE,GAAL;AACA;AACH;AACD,oBAAI,CAACC,IAAL,EAAW;AACPJ,wBAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASH,KAAKG,OAAhB,EAAyBC,WAAWJ,KAAKI,SAAzC,EAArB;AACA;AACH;AACDV,oBAAIW,KAAJ,CAAUN,IAAV,EAAgB,UAACD,GAAD,EAAS;AACrB,wBAAIA,GAAJ,EAAS;AACL,+BAAOF,KAAKE,GAAL,CAAP;AACH;AACDH,wBAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAAUI,6BAAV,CAAwCP,IAAxC,CAArB;AACA;AACH,iBAND;AAOH,aAhBD,EAgBGL,GAhBH,EAgBQC,GAhBR,EAgBaC,IAhBb;AAiBH;AAnBK,KAvBQ;AA4ClB,gBAAY;AACRW,aAAK,aAACb,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrBD,gBAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAAUI,6BAAV,CAAwCZ,IAAIK,IAA5C,CAArB;AACA;AACH;AAJO,KA5CM;AAkDlB,eAAW;AACPQ,aAAK,aAACb,GAAD,EAAMC,GAAN,EAAc;AACfD,gBAAIc,OAAJ,CAAYC,OAAZ,CAAoB,UAAUX,GAAV,EAAe;AAC/B,oBAAIA,GAAJ,EAAS;AACLY,4BAAQC,GAAR,CAAY,wBAAZ,EAAsCb,GAAtC;AACH;AACDH,oBAAIiB,WAAJ,CAAgB,aAAhB;AACAjB,oBAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,yBAAX,EAArB;AACA;AACH,aAPD;AAQH;AAVM;AAlDO,CAAf","file":"routes.js","sourcesContent":["import passport from 'passport';\nimport { APP_CONFIG } from '../app-config';\nimport { userModel } from './models/user.model';\nexport const apiAuthlessRoutes = [\n    '/register',\n    '/login'\n].map((route) => `${APP_CONFIG.app.apiSuffix}${route}`);\nexport const routes = {\n    '/register': {\n        post: (req, res, next) => {\n            passport.authenticate('sign-up', (err, user, info) => {\n                if (err) {\n                    next(err);\n                    return;\n                }\n                if (!user) {\n                    res.status(400).json({ message: info.message, errorCode: info.errorCode });\n                    return;\n                }\n                req.login(user, (err) => {\n                    if (err) {\n                        next(err);\n                        return;\n                    }\n                    res.status(201).json(userModel.stripSensitiveDataForResponse(user));\n                    return;\n                });\n            })(req, res, next);\n        }\n    },\n    '/login': {\n        post: (req, res, next) => {\n            passport.authenticate('login', (err, user, info) => {\n                if (err) {\n                    next(err);\n                    return;\n                }\n                if (!user) {\n                    res.status(400).json({ message: info.message, errorCode: info.errorCode });\n                    return;\n                }\n                req.login(user, (err) => {\n                    if (err) {\n                        return next(err);\n                    }\n                    res.status(200).json(userModel.stripSensitiveDataForResponse(user));\n                    return;\n                });\n            })(req, res, next);\n        }\n    },\n    '/account': {\n        get: (req, res, next) => {\n            res.status(200).json(userModel.stripSensitiveDataForResponse(req.user));\n            return;\n        }\n    },\n    '/logOut': {\n        get: (req, res) => {\n            req.session.destroy(function (err) {\n                if (err) {\n                    console.log(\"Err removing session, \", err);\n                }\n                res.clearCookie('connect.sid');\n                res.status(200).json({ message: \"Successfully logged out\" });\n                return;\n            });\n        }\n    }\n};\n"]}