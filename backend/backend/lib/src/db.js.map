{"version":3,"sources":["../../../src/db.js"],"names":["DB_PROMISE","connect","db","url","collection","collectionName","Promise","resolve","reject","then","catch","error","ID","idString"],"mappings":";;;;;;;AAAA;;AACA;;AACA,IAAMA,aAAa,qBAAYC,OAAZ,CAAoB,sBAAWC,EAAX,CAAcC,GAAlC,CAAnB;AACO,IAAMC,kCAAa,SAAbA,UAAa,CAACC,cAAD,EAAoB;AAC1C,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpCR,mBACKS,IADL,CACU,UAACP,EAAD,EAAQ;AACdK,oBAAQL,GAAGE,UAAH,CAAcC,cAAd,CAAR;AACA;AACH,SAJD,EAKKK,KALL,CAKW,UAACC,KAAD,EAAW;AAClBH,mBAAOG,KAAP;AACA;AACH,SARD;AASH,KAVM,CAAP;AAWH,CAZM;AAaA,IAAMC,kBAAK,SAALA,EAAK,CAACC,QAAD,EAAc;AAC5B,WAAO,sBAAaA,QAAb,CAAP;AACH,CAFM","file":"db.js","sourcesContent":["import { MongoClient, ObjectID } from 'mongodb';\nimport { APP_CONFIG } from '../app-config';\nconst DB_PROMISE = MongoClient.connect(APP_CONFIG.db.url);\nexport const collection = (collectionName) => {\n    return new Promise((resolve, reject) => {\n        DB_PROMISE\n            .then((db) => {\n            resolve(db.collection(collectionName));\n            return;\n        })\n            .catch((error) => {\n            reject(error);\n            return;\n        });\n    });\n};\nexport const ID = (idString) => {\n    return new ObjectID(idString);\n};\n"]}